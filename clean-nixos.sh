#!/bin/bash

# 🧹 NixOS Quick Clean Script
# Removes JaKooLiT/other Hyprland configs and resets to clean state

set -e

echo "🚨 =================================="
echo "🧹 NixOS QUICK CLEAN SCRIPT"
echo "🚨 =================================="
echo ""
echo "⚠️  WARNING: This will:"
echo "   - Remove ALL dotfiles configs"
echo "   - Uninstall Home Manager"
echo "   - Reset to minimal GNOME setup"
echo "   - You will need to reboot after this"
echo ""
read -p "🤔 Continue? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "❌ Cancelled."
    exit 1
fi

echo ""
echo "🧹 Starting cleanup process..."

# Get current username
CURRENT_USER=$(whoami)
echo "👤 Current user: $CURRENT_USER"

# Stop running desktop services
echo "🔴 Stopping desktop services..."
pkill -f waybar 2>/dev/null || true
pkill -f hyprland 2>/dev/null || true
pkill -f swaync 2>/dev/null || true
pkill -f rofi 2>/dev/null || true
pkill -f wlogout 2>/dev/null || true

# Remove Home Manager
echo "🗑️  Removing Home Manager..."
home-manager uninstall 2>/dev/null || true

# Remove all Hyprland/Waybar/Desktop configs
echo "🗂️  Removing desktop configs..."
rm -rf ~/.config/hypr
rm -rf ~/.config/waybar
rm -rf ~/.config/rofi
rm -rf ~/.config/kitty
rm -rf ~/.config/nvim
rm -rf ~/.config/swaync
rm -rf ~/.config/wlogout
rm -rf ~/.config/swaylock
rm -rf ~/.config/wofi
rm -rf ~/.config/mako
rm -rf ~/.config/dunst
rm -rf ~/.config/eww

# Remove shell configs
echo "🐚 Removing shell configs..."
rm -rf ~/.config/zsh
rm -rf ~/.config/fish
rm -rf ~/.config/starship.toml
rm -rf ~/.zshrc
rm -rf ~/.p10k.zsh
rm -rf ~/.bashrc.backup

# Remove Home Manager state
echo "🏠 Cleaning Home Manager state..."
rm -rf ~/.local/state/home-manager
rm -rf ~/.config/home-manager
rm -rf ~/.local/share/applications/home-manager-*
rm -rf ~/.local/state/nix/profiles/home-manager*

# Clear shell history
echo "📜 Clearing shell history..."
rm -rf ~/.zsh_history
rm -rf ~/.bash_history

# Backup current NixOS config
echo "💾 Backing up current config..."
sudo cp /etc/nixos/configuration.nix /etc/nixos/configuration.nix.backup.$(date +%Y%m%d_%H%M%S) || true

# Ensure hardware-configuration.nix exists
if [ ! -f /etc/nixos/hardware-configuration.nix ]; then
    echo "⚠️  Warning: hardware-configuration.nix not found!"
    echo "   Generating hardware configuration..."
    sudo nixos-generate-config --show-hardware-config > /tmp/hardware-config.nix
    sudo mv /tmp/hardware-config.nix /etc/nixos/hardware-configuration.nix
fi

# Create minimal configuration
echo "⚙️  Creating minimal NixOS config..."
sudo tee /etc/nixos/configuration.nix > /dev/null << EOF
# Minimal NixOS Configuration
# Generated by clean-nixos.sh on $(date)
# This is a safe, minimal config to reset the system

{ config, pkgs, lib, ... }:

{
  imports = [
    ./hardware-configuration.nix
  ];

  # Boot loader
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # Enable flakes
  nix.settings.experimental-features = [ "nix-command" "flakes" ];

  # Networking
  networking.networkmanager.enable = true;
  networking.hostName = "nixos";

  # Locale
  time.timeZone = "Asia/Ho_Chi_Minh";
  i18n.defaultLocale = "en_US.UTF-8";

  # GNOME Desktop (temporary)
  services.xserver = {
    enable = true;
    displayManager.gdm.enable = true;
    desktopManager.gnome.enable = true;
  };

  # Graphics
  hardware.opengl = {
    enable = true;
    driSupport = true;
    driSupport32Bit = true;
  };

  # User account
  users.users.$CURRENT_USER = {
    isNormalUser = true;
    extraGroups = [ "wheel" "networkmanager" ];
    packages = with pkgs; [
      firefox
      git
      vim
      curl
      wget
    ];
  };

  # System packages
  environment.systemPackages = with pkgs; [
    git
    vim
    curl
    wget
    htop
    tree
  ];

  # SSH
  services.openssh.enable = true;

  # NixOS release version
  system.stateVersion = "23.11"; # Don't change this - should match your initial install
}
EOF

echo ""
echo "🔍 Validating NixOS configuration syntax..."

# Function to validate config syntax
validate_config() {
    local config_file="$1"
    echo "   📋 Checking syntax: $config_file"
    
    # Check if nix-instantiate is available
    if ! command -v nix-instantiate >/dev/null 2>&1; then
        echo "   ⚠️  nix-instantiate not found, skipping syntax check"
        echo "   ℹ️  Basic file existence check only"
        if [ -f "$config_file" ] && [ -s "$config_file" ]; then
            echo "   ✅ Config file exists and is not empty"
            return 0
        else
            echo "   ❌ Config file missing or empty"
            return 1
        fi
    fi
    
    if ! nix-instantiate --parse "$config_file" >/dev/null 2>&1; then
        echo "   ❌ Syntax validation failed!"
        return 1
    fi
    
    echo "   ✅ Syntax validation passed"
    return 0
}

# Validate the generated config
if ! validate_config "/etc/nixos/configuration.nix"; then
    echo ""
    echo "❌ Configuration validation failed!"
    echo "   The generated config has syntax errors."
    echo "   Please check /etc/nixos/configuration.nix manually."
    echo "   Backup config preserved: /etc/nixos/configuration.nix.backup.*"
    exit 1
fi

echo ""
echo "🔄 Rebuilding NixOS with clean config..."

# Try rebuild with explicit config file path
if ! sudo nixos-rebuild switch --file /etc/nixos/configuration.nix; then
    echo ""
    echo "❌ First rebuild attempt failed. Trying with detailed trace..."
    echo "🔍 Running with --show-trace for debugging..."
    
    if ! sudo nixos-rebuild switch --file /etc/nixos/configuration.nix --show-trace; then
        echo ""
        echo "❌ =================================="
        echo "💥 REBUILD FAILED!"
        echo "❌ =================================="
        echo ""
        echo "🚨 The system rebuild failed even with trace output."
        echo "📁 Your original config is backed up as:"
        echo "   /etc/nixos/configuration.nix.backup.*"
        echo ""
        echo "🔧 Manual recovery options:"
        echo "   1. Restore backup: sudo cp /etc/nixos/configuration.nix.backup.* /etc/nixos/configuration.nix"
        echo "   2. Check logs: sudo journalctl -u nixos-rebuild"
        echo "   3. Try safe config: sudo nixos-rebuild switch --file /etc/nixos/configuration.nix --fallback"
        echo ""
        exit 1
    fi
fi

echo ""
echo "✅ =================================="
echo "🎉 CLEANUP COMPLETED!"
echo "✅ =================================="
echo ""
echo "📋 What was done:"
echo "   ✅ Removed all Hyprland/Waybar configs"
echo "   ✅ Uninstalled Home Manager"
echo "   ✅ Reset to minimal GNOME desktop"
echo "   ✅ Backed up old config"
echo ""
echo "🔄 NEXT STEPS:"
echo "   1. Reboot your system now"
echo "   2. Login to GNOME desktop"
echo "   3. Clone new config: git clone https://github.com/NgHuyNat/nixos.git ~/.config/nixos"
echo "   4. Apply new config: sudo nixos-rebuild switch --flake ~/.config/nixos#default"
echo ""
echo "🚀 Ready to reboot? Run: sudo reboot"
